import { Atom, WritableAtom } from './types';
import { AtomState, State } from './vanilla';
export declare type Actions = {
    add: <Value>(atom: Atom<Value>, id: symbol) => void;
    del: <Value>(atom: Atom<Value>, id: symbol) => void;
    read: <Value>(state: State, atom: Atom<Value>) => AtomState<Value>;
    write: <Value, Update>(atom: WritableAtom<Value, Update>, update: Update) => void | Promise<void>;
};
export declare const getContexts: (scope?: string | number | symbol | undefined) => readonly [
    import("use-context-selector").Context<Actions | null>,
    import("use-context-selector").Context<State | null>
];
